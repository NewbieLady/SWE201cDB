User stories are tokens for conversations.
Stories can be written at different levels and can be refined and split into smaller stories as you move from vague idea to implemented software.
User stories are used to plan, design, describe, build, and validate your product.
They help the product owner (who is writing the story) think through the user needs.
They help you write tests cases for the story.
They help build a common understanding between team members.
They can potentially help you split stories, if required.
It doesn't specify the value of the story (the "why" is missing).
The user who benefits from this story is missing (the "who" is missing).
It is not testable.
No valid user is identified.
At any given time, the level of detail may be different for different parts of the software.
The agile way supports progressive refinement---defining the right level of detail at the right time.
Agile encourages conversations as a key method for building a shared understanding.
To generate stories, one of the options is to start from the top down or bottom up.
Sometimes, you keep it free-form for people to write stories and later group them by theme.
User role analysis and defining personas
Everybody silently writes user stories around a theme
It is a user-centric approach where we map out the system from a user's perspective.
The horizontal axis (moving from left to right) in a story map represents time.
The vertical axis (moving from top to bottom) in a story map represents rough priority.
Most likely: Story 1 to Story 8; Might Be Done: Story 9 to Story 13; Not likely: Rest of the stories
Plan just enough, just in time.
Use Adaptive Planning.
It is calculated at the team level and represents how much work a team can get done in an iteration.